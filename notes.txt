HotKeys
Select same word multiple times Ctrl + D


3 main resources
users
profiles
posts

will need separate files for these because it will get to messy


Using postman (http client) enables different types of http requests 
    - like post request to register route 
    - authorization headers
    - fantastic piece of software to deal with back end api

json webtoken module
    - creates token,
    - passport will validate it and extract the user's information from it

email & password login
    - localhost:5000/api/users/register
    - validating email and password and make sure it exists 

12-Creating The JWT
    - create a token when  `res.json({ msg: "Success" });`

13-Passport JWT Authentication Strategy
    - login, will retrieve token for a user
    - then we tried to access a protected route, we did it without a token and got unauthorized back
    - then we added the correct token and now its responding with the user 
    - accepting tokens that will validate a user and access our protected routes 
    
14- validation handlers 1

    -validating login and user modules

15- validation handlers 2

    -finishing up validation for register and login 
    

17 - creating the profile module

    -created the profile model and exported it .
    
18 - Current user profile route

    - creating the profile route in routes/api/profile.js to handle back end

19  Create & Update Profile Routes

    - created post route to actually create the profile 

    .profile.js 
        -get everything in request.body
        - fill profile fields 
        - search for user by user.id
        - if they have a profile they are going to update it 
        - if they dont. Check if there is no handle by that name
                if there is it will send back an error

                and if not it will go ahead and create the profile

20 Profile Field Validations

    - 

21 More profile api routes

    - Getting user profile by handle
    - Get user profile by id
    - Get all profiles and serve them by json array
    - can change to private if wanting to
    - up to you on how long you want tokens to last

22 Add Experience & Education Routes

    - to an array(profile) and delete them 

23 Delete education and Experience

    - allows a user to delete education and experience and user and profile

24 Creating the post model
    - might want to add different models like video or images that will be possible to upload 
    - going to create post that will be able to get liked  and commented on 

26-get-and-delete-post-routes

    - get and delete post routes
    
 27-post-like-and-unlike-routes
    - like and remove likes

28-add-and-remove-comment-routes
    - create the ability to add and remove comments 

30-implementing-react
    - incorporating react     
    - npm i concurrently (enables us to incorporate the front end and the back end at the same time)
        - allows us to run a script and have multiple commands 
    -  "dev": "concurrently \"npm run server\" \"npm run client\""
                    server and client will be ran at the same time

    - npm run dev

    localhost:5000 is back end
    localhost:3000 is front end
    
32-basic-layout
    - created the basic layout which included the navbar, landing, and Footer.js files components and added it to app.js

33-react-router-setup
    - we need a router because we are going to have multiple routes 
    - million ways to do a spcefic things. All about preference 
    - want to create routes with the components 
    - will create private routes in the future 

34-creating-the-register-form-with-states
    - work on register component 
    - each field has to have its own state within the component 
    - dealing with component state 
    - implement change events (typing)
    - as a user I want to be able to sign up (created the form functionaluty for the submit button)

